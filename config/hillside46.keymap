/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_L   0
#define Undo   LC(Y)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)
#define Redo   LC(Z)

/ {
    

    behaviors {
        gr_esc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GR_ESC";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp ESC>;

            mods = <(MOD_LGUI|MOD_LALT|MOD_RGUI|MOD_RALT)>;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BS_DEL";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        Bspc_Layer: Bspc_Layer {
            compatible = "zmk,behavior-hold-tap";
            label = "BSPC_LAYER";
            bindings = <&mo>, <&bspc_del>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Combo_B {
            bindings = <&kp B>;
            key-positions = <33 21>;
            layers = <0>;
        };

        Combo_C {
            bindings = <&kp C>;
            key-positions = <19 34>;
            layers = <0>;
        };

        Combo_D {
            bindings = <&kp D>;
            key-positions = <34 22>;
            layers = <0>;
        };

        Combo_F {
            bindings = <&kp F>;
            key-positions = <33 34>;
            layers = <0>;
        };

        Combo_G {
            bindings = <&kp G>;
            key-positions = <20 19>;
            layers = <0>;
        };

        Combo_H {
            bindings = <&kp H>;
            key-positions = <19 35>;
            layers = <0>;
        };

        Combo_J {
            bindings = <&kp J>;
            key-positions = <33 35>;
            layers = <0>;
        };

        Combo_K {
            bindings = <&kp K>;
            key-positions = <19 22>;
            layers = <0>;
        };

        Combo_L {
            bindings = <&kp L>;
            key-positions = <19 36>;
            layers = <0>;
        };

        Combo_M {
            bindings = <&kp M>;
            key-positions = <33 22>;
            layers = <0>;
        };

        Combo_P {
            bindings = <&kp P>;
            key-positions = <20 21>;
            layers = <0>;
        };

        Combo_Q {
            bindings = <&kp Q>;
            key-positions = <20 35 22>;
            layers = <0>;
        };

        Combo_T {
            bindings = <&kp T>;
            key-positions = <19 21>;
            layers = <0>;
        };

        Combo_U {
            bindings = <&kp U>;
            key-positions = <33 36>;
            layers = <0>;
        };

        Combo_V {
            bindings = <&kp V>;
            key-positions = <20 35>;
            layers = <0>;
        };

        Combo_W {
            bindings = <&kp W>;
            key-positions = <34 35>;
            layers = <0>;
        };

        Combo_X {
            bindings = <&kp X>;
            key-positions = <20 22>;
            layers = <0>;
        };

        Combo_Y {
            bindings = <&kp Z>;
            key-positions = <19 20 35>;
            layers = <0>;
        };

        Combo_Z {
            bindings = <&kp Y>;
            key-positions = <34 36>;
            layers = <0>;
        };

        Combo_DEL {
            bindings = <&kp DEL>;
            key-positions = <20 33 21>;
        };

        Combo_BSPC {
            bindings = <&kp BSPC>;
            key-positions = <19 20 21>;
        };

        Combo_RET {
            bindings = <&kp RET>;
            key-positions = <34 21>;
        };

        Combo_COMMA {
            bindings = <&kp COMMA>;
            key-positions = <21 22>;
        };

        Combo_PERIOD {
            bindings = <&kp PERIOD>;
            key-positions = <22 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |  ESC  |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Z   |   U   |   I   |   O   |   P   |   Ü   |
 * |   ß   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   Ö   |   Ä   |
 * | CTRL  |   Y   |   X   |   C   |   V   |   B   | none  |-------------------|  none |   N   |   M   |   ,   |   .   |   -   | ENTER |
 *                                 |  GUI  | BSPC  |SK SHFT|  Nav  |---| Sym - |  none |  none |  none |
 *  
 */

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E  &kp R     &kp T                                                   &none  &none  &none      &none  &none  &none
&kp MINUS   &kp A  &kp S  &kp D  &kp F     &kp G                                                   &none  &kp N  &kp E      &kp R  &kp S  &none
&trans      &kp Z  &kp X  &kp C  &kp V     &kp B            &none                           &none  &none  &kp A  &kp SPACE  &kp I  &kp O  &trans
                                 &kp LGUI  &none            &none    &none           &none  &none  &none  &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

        };
    };
};